class DNA {
    constructor(str) {
        let obj = JSON.parse(str);
        this.data = obj;
        this.length = this.data.length;
    }

    printDNA() {
        return JSON.stringify(this.data);
    }

    mutate(rate) {
        if (Math.random() < rate) {
            let i = Math.floor(Math.random() * this.data.length);
            let j = Math.floor(Math.random() * this.data[i].length);
            let m = Math.floor(Math.random() * this.data[i][j].length);
            let n = Math.floor(Math.random() * this.data[i][j][m].length);
            this.data[i][j][m][n] = Math.random() * 2 - 1;
        }
    }
}

function crossDNA(strA, strB) {
    let a = new DNA(strA);
    let b = new DNA(strB);
    if (a.length !== b.length) {
        console.log('DNA length does not match, unable to cross!');
        return undefined;
    }
    let choice = [a, b];
    let arr = [];
    for (let i = 0; i < a.length; i++) {
        arr.push([]);
    }
    let d = new DNA(JSON.stringify(arr));
    for (let j = 0; j < d.length; j++) {
        d.data[j] = choice[Math.floor(Math.random() * 2)].data[j];
    }
    return d.printDNA();
}

function mutateDNA(str, rate, t) {
    let d = new DNA(str);
    for (let i = 0; i < t; i++) {
        d.mutate(rate);
    }
    return d.printDNA();
}

/**
 * Best DNA so far:
 * "[[[[-0.45145992551014735,0.47444949396784053,-0.27385908663477143,-0.7123429781989932],[-0.45569166242644243,-0.7639601752545212,-0.7409295912096006,0.7329219654556973],[0.6000729773713525,-0.4627792801519054,0.2470839295434346,-0.5345334084207363],[-0.8800099365988043,0.27516508759375835,-0.6352754633893566,0.658214450365338],[-0.025614167107458674,-0.07784377957165023,0.19458831783622355,0.3645142594310533],[0.49329925562427834,-0.15612210797596182,-0.3248017646025675,-0.6370385129042799],[-0.7956891625987381,-0.26643123108286326,0.9104820753569007,0.5105340149199007],[-0.8538747610378539,-0.03642223328010907,0.3291169113129655,0.6205548055075041],[-0.32473844214922365,-0.6101172303014382,0.2304710497718565,-0.9887712789065763],[0.197656228364415,-0.4033836860775225,-0.19610952532853376,0.6429243764416177],[0.8643385093138987,0.8616177614696798,0.7843244462310563,-0.8807937100560533],[0.48191608345825343,-0.8433043207255286,-0.8367611970882688,-0.03099268911868025]],[[0.678507051030242,-0.04333012468343833,-0.04067640702070774,0.2722445800981155,-0.14395233505560878,0.3939054374133679,-0.7679277693069555,0.4438624440061203,-0.2625297952865704,-0.558161085787827,0.6563645306730403,-0.2163751187781756],[-0.11550319779831386,0.9832257739689796,-0.3191823716597414,-0.5807354457443008,-0.755509234901508,0.9195669874375045,-0.5634196885140283,-0.1767011971328748,0.8849339966414156,-0.25925443684600236,0.02289690327356486,0.7185606715876527],[0.039410731245157704,-0.684087652209651,-0.8515607427505086,-0.2747955810355338,-0.1344997442131436,-0.365025375568499,0.8959909916102415,-0.40718914436911435,0.4628283105717055,-0.21650186465859134,-0.056770218695434194,-0.08419527518135961]]],[[[-0.1585150861673994],[-0.5692141889723942],[-0.19944235655086295],[0.2571536002107411],[0.011345856400978738],[-0.06733382676278143],[0.7568549635796977],[0.383397497598543],[-0.06351316920618844],[-0.004486368749795133],[-0.3152849364918515],[-0.24273033438246372]],[[-0.08861152734623201],[0.3891649179986243],[-0.7671485030815501]]]]"
 * "[[[[-0.29745993863601183,-0.43329790336314855,-0.8450761914256811,0.5448891465541092],[0.050213629412843686,0.8268834352059158,-0.8320995060546824,-0.5648793463240275],[0.4594545553722571,-0.6878203329164658,0.18696056368542346,-0.7836361998894884],[0.17610188114059766,-0.807809237076944,-0.7002388242081529,-0.3778978639982752],[0.8197170784472794,0.4355345460116864,0.37325928702852185,-0.5983048996455171],[0.1795881067638443,-0.8683526264941185,0.6975122445883231,-0.9159684084892505],[0.6561295285631001,-0.6578566290739374,0.23669427545351462,0.07815320383793911],[0.3871266106401694,-0.6644924001480501,-0.6146465832791501,-0.8876444977529283],[0.08463844727514558,0.14896429686324875,-0.4077162148337322,-0.030960658571865807],[0.3792161720638745,0.9551251674381527,0.7837669728073704,0.18249818493610226],[0.7313274962163558,0.8863269990856562,0.2734479838623425,-0.23881669985582],[-0.5832477822633106,0.559592847499524,-0.08637364409584491,0.38655575618983207]],[[0.6897869074400866,-0.36262672334203383,-0.9267891125370354,-0.2269664322866125,0.9825227363835087,0.912321575182248,-0.7030107698254986,-0.40545395120156613,-0.7916299492486657,-0.006796871422283246,0.46647269908212596,0.8495019888868933],[-0.2922804385831925,-0.862477456032177,0.5593339824872816,0.1248830643954213,0.2017646553973289,-0.4547968205599059,0.45595414982763116,-0.3182952657671585,-0.14805814807480033,-0.048363564923301405,0.8421388039421298,0.5637864605270175],[-0.7004393037283015,0.47739449043694737,0.2315348126521466,-0.06284833706314796,-0.30321648021388203,-0.6334263504574016,0.08242621635017477,0.832383745920231,0.8237584652063428,0.40335983052499813,-0.6644853890021087,0.14832589744864988]]],[[[-0.3694491312040086],[-0.6700005127363114],[-0.056945255301241726],[0.8097918407035516],[-0.8721575546129032],[-0.4318412048350717],[0.7098443286209921],[-0.7920058067609659],[-0.3663205728855038],[0.9474425485162561],[0.2842383649635445],[0.10146575060218566]],[[-0.06664501029756464],[-0.7183784208691726],[-0.360143326348789]]]]"
 * 
 * 
 * */